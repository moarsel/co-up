type Topic
  @model
  @key(name: "byType", fields: ["type", "id"])
  @key(name: "byTypeDate", fields: ["type", "endDate"])
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  title: String!
  description: String
  type: String!
  reward: Int!
  endDate: AWSDateTime
  proposals: [Proposal] @connection(keyName: "byTopic", fields: ["id"])
  userID: ID!
  user: User @connection(fields: ["userID"])
}

type Proposal
  @model
  @key(name: "byTopic", fields: ["topicID"])
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  title: String!
  description: String!
  topicID: ID!
  topic: Topic @connection(fields: ["topicID"])
  userID: ID!
  user: User @connection(fields: ["userID"])
  comments: [Comment] @connection(keyName: "byProposal", fields: ["id"])
  votes: [Vote] @connection(keyName: "byVote", fields: ["id"])
}

type Comment
  @model
  @key(name: "byProposal", fields: ["proposalID"])
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  proposalID: ID!
  proposal: Proposal @connection(fields: ["proposalID"])
  content: String!
  userID: ID!
  user: User @connection(fields: ["userID"])
}

type Vote
  @model
  @key(name: "byProposal", fields: ["proposalID", "id"])
  @key(name: "byProposalUser", fields: ["proposalID", "userID"])
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  proposalID: ID!
  proposal: Proposal @connection(fields: ["proposalID"])
  userID: ID!
  user: User @connection(fields: ["userID"])
}

type User
  @model
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  name: String
  email: AWSEmail!
  tokens: Int!
}
